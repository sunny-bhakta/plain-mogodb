// /*
//  * Scenario:
//  *  Your organisation wants to know the best targets for a new marketing campaign based on a social network database similar to Twitter. You want to search the collection of social network users, each holding a user's name and the names of their friends.
//  *
//  * Objective:
//  *   
//  *
//  * Method:
//  *
//  * Note:
//  *   
//  */


// // Switch to the test database and drop it to start fresh
// db = db.getSiblingDB("testdb");
// db.dropDatabase();

// use("testdb");

// // Create index on field which each graph traversal hop will connect to
// db.users.createIndex({"name": 1});

// // Insert records into the users collection
// db.users.insertMany([
//   {"name": "Paul", "followed_by": []},
//   {"name": "Toni", "followed_by": ["Paul"]},
//   {"name": "Janet", "followed_by": ["Paul", "Toni"]},
//   {"name": "David", "followed_by": ["Janet", "Paul", "Toni"]},
//   {"name": "Fiona", "followed_by": ["David", "Paul"]},
//   {"name": "Bob", "followed_by": ["Janet"]},
//   {"name": "Carl", "followed_by": ["Fiona"]},
//   {"name": "Sarah", "followed_by": ["Carl", "Paul"]},
//   {"name": "Carol", "followed_by": ["Helen", "Sarah"]},
//   {"name": "Helen", "followed_by": ["Paul"]},
// ]);

// // Aggregation pipeline to convert paymentDate string to BSON date
// const pipeline = [];

// // Run the aggregation and return the results as an array
// db.users  .aggregate(pipeline).toArray();


